{"version":3,"sources":["Header.js","components/ColumnFilter.js","components/columns.js","components/GlobalFilter.js","components/FilteringTable.js","HeaderPages/Home.js","HeaderPages/MyPatients.js","HeaderPages/UploadContent.js","HeaderPages/Notifications.js","HeaderPages/LoginRegister.js","PatientAPI.js","HeaderPages/Profile.js","App.js","serviceWorker.js","index.js"],"names":["Header","handleClickHome","props","history","push","handleClickMyPatients","handleClickUploadContent","handleClickNotifications","handleClickLoginRegister","handleClickProfile","onClick","this","Component","withRouter","ColumnFilter","column","filterValue","setFilter","value","onChange","e","target","COLUMNS","Footer","accessor","Filter","disableFilters","Cell","format","Date","GlobalFilter","filter","FilteringTable","columns","useMemo","data","MOCK_DATA","useTable","useFilters","useGlobalFilter","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","state","setGlobalFilter","globalFilter","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","canFilter","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps","getFooterProps","Home","Directory","UploadContent","Notifications","LoginRegister","useState","usernameReg","setUsernameReg","paswordReg","setPasswordReg","username","setUsername","pasword","setPassword","loginStatus","setLoginStatus","className","type","Axios","post","password","then","response","console","log","placeholder","message","patients","id","name","email","registrationDate","bio","Profile","patient","match","params","patientId","patientName","length","role","App","exact","path","component","MyPatients","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.22877e67.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  handleClickHome = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n  handleClickMyPatients = () => {\r\n    this.props.history.push(\"/mypatients\");\r\n  };\r\n  handleClickUploadContent = () => {\r\n    this.props.history.push(\"/uploadcontent\");\r\n  };\r\n  handleClickNotifications = () => {\r\n    this.props.history.push(\"/notifications\");\r\n  };\r\n  handleClickLoginRegister = () => {\r\n    this.props.history.push(\"/loginregister\");\r\n  };\r\n  handleClickProfile = () => {\r\n    this.props.history.push(\"/profile\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2> This is our Header! </h2>\r\n        <button onClick={this.handleClickHome}>Home</button>\r\n        <button onClick={this.handleClickMyPatients}>My Patients</button>\r\n        <button onClick={this.handleClickUploadContent}>Upload Content</button>\r\n        <button onClick={this.handleClickNotifications}>Notifications</button>\r\n        <button onClick={this.handleClickLoginRegister}>Login/Register</button>\r\n        <button onClick={this.handleClickProfile}>Profie</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\n\r\nexport const ColumnFilter = ({ column }) => {\r\n  const { filterValue, setFilter } = column;\r\n  return (\r\n    <span>\r\n      Search:{\" \"}\r\n      <input\r\n        value={filterValue || \"\"}\r\n        onChange={(e) => setFilter(e.target.value)}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n","import { format } from \"date-fns\";\r\nimport { ColumnFilter } from \"./ColumnFilter\";\r\n\r\nexport const COLUMNS = [\r\n  {\r\n    Header: \"Id\",\r\n    Footer: \"Id\",\r\n    accessor: \"id\",\r\n    Filter: ColumnFilter,\r\n    disableFilters: true,\r\n  },\r\n  {\r\n    Header: \"First Name\",\r\n    Footer: \"First Name\",\r\n    accessor: \"first_name\",\r\n    Filter: ColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Last Name\",\r\n    Footer: \"Last Name\",\r\n    accessor: \"last_name\",\r\n    Filter: ColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Email\",\r\n    Footer: \"Email\",\r\n    accessor: \"email\",\r\n    Filter: ColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Gender\",\r\n    Footer: \"Gender\",\r\n    accessor: \"gender\",\r\n    Filter: ColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Age\",\r\n    Footer: \"Age\",\r\n    accessor: \"age\",\r\n    Filter: ColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Phone\",\r\n    Footer: \"Phone\",\r\n    accessor: \"phone\",\r\n    Filter: ColumnFilter,\r\n  },\r\n  {\r\n    Header: \"Date of Exercise\",\r\n    Footer: \"Date of Exercise\",\r\n    accessor: \"date_of_exercise\",\r\n    Filter: ColumnFilter,\r\n    Cell: ({ value }) => {\r\n      return format(new Date(value), \"dd/MM/yyyy\");\r\n    },\r\n  },\r\n];\r\n\r\nexport const GROUPED_COLUMNS = [\r\n  {\r\n    Header: \"Id\",\r\n    Footer: \"Id\",\r\n    accessor: \"id\",\r\n  },\r\n  {\r\n    Header: \"Name\",\r\n    Footer: \"Name\",\r\n    columns: [\r\n      {\r\n        Header: \"First Name\",\r\n        Footer: \"First Name\",\r\n        accessor: \"first_name\",\r\n      },\r\n      {\r\n        Header: \"Last Name\",\r\n        Footer: \"Last Name\",\r\n        accessor: \"last_name\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    Header: \"Info\",\r\n    Footer: \"Info\",\r\n    columns: [\r\n      {\r\n        Header: \"Email\",\r\n        Footer: \"Email\",\r\n        accessor: \"email\",\r\n      },\r\n      {\r\n        Header: \"Gender\",\r\n        Footer: \"Gender\",\r\n        accessor: \"gender\",\r\n      },\r\n      {\r\n        Header: \"Age\",\r\n        Footer: \"Age\",\r\n        accessor: \"age\",\r\n      },\r\n      {\r\n        Header: \"Phone\",\r\n        Footer: \"Phone\",\r\n        accessor: \"phone\",\r\n      },\r\n      {\r\n        Header: \"Date of Exercise\",\r\n        Footer: \"Date of Exercise\",\r\n        accessor: \"date_of_exercise\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\n\r\nexport const GlobalFilter = ({ filter, setFilter }) => {\r\n  return (\r\n    <span>\r\n      Search:{\" \"}\r\n      <input\r\n        value={filter || \"\"}\r\n        onChange={(e) => {\r\n          setFilter(e.target.value);\r\n        }}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport { useTable, useGlobalFilter, useFilters } from \"react-table\";\r\nimport MOCK_DATA from \"./MOCK_DATA.json\";\r\nimport { COLUMNS } from \"./columns\";\r\nimport \"./table.css\";\r\nimport { GlobalFilter } from \"./GlobalFilter\";\r\n\r\nexport const FilteringTable = () => {\r\n  //using memo to save calculation on data OR performance boost (other wise every render will be recognize as new data)\r\n  const columns = useMemo(() => COLUMNS, []);\r\n  const data = useMemo(() => MOCK_DATA, []);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n    },\r\n    useFilters,\r\n    useGlobalFilter\r\n  );\r\n\r\n  const { globalFilter } = state;\r\n\r\n  return (\r\n    <>\r\n      <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>\r\n                  {column.render(\"Header\")}\r\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n          {footerGroups.map((footerGroup) => (\r\n            <tr {...footerGroup.getFooterGroupProps()}>\r\n              {footerGroup.headers.map((column) => (\r\n                <td {...column.getFooterProps}>{column.render(\"Footer\")}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tfoot>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { BasicTable } from \"../components/BasicTable\";\r\nimport { SortingTable } from \"../components/SortingTable\";\r\nimport { FilteringTable } from \"../components/FilteringTable\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2> This is our Home Page! </h2>\r\n        <h3> Patient List for PT A! </h3>\r\n        <FilteringTable />\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Directory extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2> This is our patient directory! </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Directory;\r\n","import React, { Component } from \"react\";\r\n\r\nclass UploadContent extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2> This is our Upload Content page! </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default UploadContent;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Notifications extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2> This is our notifications page! </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Notifications;\r\n","/*\r\nimport React, { Component } from \"react\";\r\n\r\nclass LoginRegister extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2> This is our login/Register Page! </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LoginRegister;\r\n*/\r\n\r\nimport React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nfunction LoginRegister() {\r\n  const [usernameReg, setUsernameReg] = useState(\"\");\r\n  const [paswordReg, setPasswordReg] = useState(\"\");\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [pasword, setPassword] = useState(\"\");\r\n\r\n  const [loginStatus, setLoginStatus] = useState(\"\");\r\n\r\n  const register = () => {\r\n    Axios.post(\"http://localhost3001/register\", {\r\n      username: usernameReg,\r\n      password: paswordReg,\r\n    }).then((response) => {\r\n      console.log(response);\r\n    });\r\n  };\r\n\r\n  const login = () => {\r\n    Axios.post(\"http://localhost3001/login\", {\r\n      username: username,\r\n      password: pasword,\r\n    }).then((response) => {\r\n      if (response.data.message) {\r\n        setLoginStatus(console.log(response));\r\n      } else {\r\n        setLoginStatus(response.data[0].username);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"LoginRegister\">\r\n      <div className=\"registration\">\r\n        <h1>Registration</h1>\r\n        <label>Username</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setUsernameReg(e.target.value);\r\n          }}\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setPasswordReg(e.target.value);\r\n          }}\r\n        />\r\n        <button onClick={register}> Register </button>\r\n      </div>\r\n\r\n      <div className=\"login\">\r\n        <h1>Login</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username...\"\r\n          onChange={(e) => {\r\n            setUsername(e.target.value);\r\n          }}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password...\"\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n        <button onClick={login}> Login </button>\r\n      </div>\r\n\r\n      <h1>CurrentUser:</h1>\r\n      <h1>{loginStatus}</h1>\r\n    </div>\r\n  );\r\n}\r\nexport default LoginRegister;\r\n","//related to profile.js (both outdated looking for a new solution)\r\nconst patients = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Myrtle W Gilliam\",\r\n    email: \"cecelia1983@yahoo.com\",\r\n    password: \"4455467535\",\r\n    registrationDate: \"4/5/1976\",\r\n    bio:\r\n      \"Typical foodaholic. Tv advocate. Professional organizer. Entrepreneur. Passionate bacon junkie. Gamer. Music geek. General web nerd.\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"Sharon L Holmes\",\r\n    email: \"trever_mra3@yahoo.com\",\r\n    password: \"7669526197\",\r\n    registrationDate: \"7/30/1951\",\r\n    bio:\r\n      \"Freelance creator. Gamer. Zombie buff. Infuriatingly humble beer fanatic. Twitter enthusiast. Amateur tv ninja.\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"James C Harlow\",\r\n    email: \"aaliyah.greenho@gmail.com\",\r\n    password: \"5870704511\",\r\n    registrationDate: \"12/10/1986\",\r\n    bio:\r\n      \"Zombie buff. Writer. Subtly charming gamer. Passionate introvert. Explorer\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    name: \"Kelly J Chappell    \",\r\n    email: \"natalia_parisi@gmail.com\",\r\n    password: \"3305339387\",\r\n    registrationDate: \"4/8/1955\",\r\n    bio:\r\n      \"Internet scholar. Friendly pop culture buff. Unapologetic alcohol fan. General reader. Typical tv fanatic.\",\r\n  },\r\n  {\r\n    id: \"5\",\r\n    name: \"Richard B Rockey\",\r\n    email: \"wilford_blan@gmail.com\",\r\n    password: \"7979757399\",\r\n    registrationDate: \"4/27/1971\",\r\n    bio:\r\n      \"Organizer. Certified gamer. Proud travel advocate. Hipster-friendly internet geek.\",\r\n  },\r\n  {\r\n    id: \"6\",\r\n    name: \"Chase T Murray\",\r\n    email: \"elna_brekk7@yahoo.com\",\r\n    password: \"2504677975\",\r\n    registrationDate: \"3/14/1977\",\r\n    bio:\r\n      \"Infuriatingly humble travel aficionado. Unapologetic communicator. Typical twitter expert.    \",\r\n  },\r\n  {\r\n    id: \"7\",\r\n    name: \"Norma H Jones\",\r\n    email: \"terry2002@yahoo.com\",\r\n    password: \"Bobobobobob\",\r\n    registrationDate: \"3941046773\",\r\n    bio:\r\n      \"Creator. Typical reader. Falls down a lot. Pop culture ninja. Hipster-friendly internet junkie. Tv enthusiast. Organizer. Travel maven.\",\r\n  },\r\n  {\r\n    id: \"8\",\r\n    name: \"Judith B Bowman\",\r\n    email: \"keanu.hamil4@yahoo.com\",\r\n    password: \"6428284288\",\r\n    registrationDate: \"7/19/1943\",\r\n    bio:\r\n      \"Coffee nerd. Amateur alcohol fan. Devoted pop culture advocate. Food aficionado. Travel expert. Bacon evangelist. Freelance analyst.\",\r\n  },\r\n  {\r\n    id: \"9\",\r\n    name: \"Jonathan E Cosme\",\r\n    email: \"larry2002@hotmail.com\",\r\n    password: \"7708277592\",\r\n    registrationDate: \"7/10/1991\",\r\n    bio:\r\n      \"Pop culture guru. Avid creator. Infuriatingly humble internet expert. Hardcore explorer.\",\r\n  },\r\n  {\r\n    id: \"10\",\r\n    name: \"Carolyn C Carl\",\r\n    email: \"arthur.herz@hotmail.com\",\r\n    password: \"2822752026\",\r\n    registrationDate: \"5/27/1975\",\r\n    bio:\r\n      \"Creator. Hipster-friendly food buff. Extreme entrepreneur. Music aficionado. Infuriatingly humble tv fan.\",\r\n  },\r\n];\r\n\r\nexport const getAllPatients = () => {\r\n  return patients;\r\n};\r\n\r\nexport const getPatientById = (id) => {\r\n  return patients.filter((patient) => {\r\n    return patient.id === id;\r\n  });\r\n};\r\n","//not using this .js yet\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getPatientById } from \"../PatientAPI\";\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const patient = getPatientById(this.props.match.params.id);\r\n    let patientId = \"not found\";\r\n    let patientName = \"not found\";\r\n    let patientRole = \"not found\";\r\n\r\n    if (patient.length > 0) {\r\n      patientId = patient[0].id;\r\n      patientName = patient[0].name;\r\n    }\r\n    this.state = {\r\n      id: patientId,\r\n      name: patientName,\r\n      role: patientRole,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>This is our profile Page!</h4>\r\n        <h5>Name: {this.state.name}</h5>\r\n        <h5>id: {this.state.id}</h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Profile);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Home from \"./HeaderPages/Home\";\nimport MyPatients from \"./HeaderPages/MyPatients\";\nimport UploadContent from \"./HeaderPages/UploadContent\";\nimport Notifications from \"./HeaderPages/Notifications\";\nimport LoginRegister from \"./HeaderPages/LoginRegister\";\nimport Profile from \"./HeaderPages/Profile\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/mypatients\" component={MyPatients} />\n        <Route exact path=\"/uploadcontent\" component={UploadContent} />\n        <Route exact path=\"/notifications\" component={Notifications} />\n        <Route exact path=\"/loginregister\" component={LoginRegister} />\n        <Route exact path=\"/profile\" component={Profile} />\n        <Route path=\"/profile/:id\" component={Profile} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}